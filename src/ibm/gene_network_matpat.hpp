#ifndef _GRN_MATPAT_HPP
#define _GRN_MATPAT_HPP

#include <vector>
#include <random>
#include <fstream>
#include "individual.hpp"
#include "parameters.hpp"

class GRN_MatPat
{
    private:
        // parameter object
        Parameters par;

        // object to store the file to write output to
        std::ofstream data_file;
        std::ofstream data_file_individuals;

        // standard uniform distribution on the unit line (0,1)
        std::uniform_real_distribution<double> uniform{0.0,1.0};

        // the standard normal distribution
        std::normal_distribution<double> normal{0.0,1.0};

        // device to generate seeds for random number generators
        std::random_device rd;

        // store seed which will be generated by rd();
        // if one stores the seed one can 'replay' the same simulation
        // multiple times, handy for debugging, visualisation or exploration
        // of specific cases
        unsigned seed;

        // the random number generator device
        std::mt19937 rng_r;

        // time step of the simulation
        unsigned time_step{0};
      
        // the population
        std::vector<Individual> males;
        std::vector<Individual> females;

        std::vector<Individual> juveniles;

        // meanW for calculation of canalization
        std::vector < std::vector < double > > meanW;

    public:
        // the constructor of the simulation
        GRN_MatPat(Parameters const &params);

        // run the actual simulation
        void run();

        void initialize_population();
        void reproduce();
        void write_data();
        void write_data_headers();
        void write_out_all_individuals();
        void write_parameters();
        void write_out_all_individuals_headers();
};

#endif
